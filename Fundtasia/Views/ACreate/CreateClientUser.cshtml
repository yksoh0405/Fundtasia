@model CreateClientUserVM

@{
    ViewBag.Title = "Create Client User";
}

<link href="~/Content/UserList.css" rel="stylesheet" />

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "createClientUser" }))
{
    <div id="createClientUserForm">
        <div class="form-group">
            <label>Last Name: </label>
            @Html.TextBoxFor(s => s.LastName, new { maxlength = "50", data_upper = "", autofocus = "", @class = "form-control" })
            @Html.ValidationMessageFor(s => s.LastName)
        </div>

        <div class="form-group">
            <label>First Name: </label>
            @Html.TextBoxFor(s => s.FirstName, new { maxlength = "50", @class = "form-control" })
            @Html.ValidationMessageFor(s => s.FirstName)
        </div>

        <div class="form-group">
            <label>Email: </label>
            @Html.TextBoxFor(s => s.Email, new { maxlength = "150", @class = "form-control" })
            @Html.ValidationMessageFor(s => s.Email)
        </div>

        <div class="form-group">
            <label>Password: </label>
            @Html.TextBoxFor(s => s.PasswordHash, new { maxlength = "100", @class = "form-control", @type = "password" })
            @Html.ValidationMessageFor(s => s.PasswordHash)
        </div>

        <div class="form-group">
            <label>Email auto verified? </label>
            <div>
                <label id="emailVerification">@Html.RadioButtonFor(s => s.IsEmailVerified, "true", new { @checked = true }) Yes </label>
                <label>@Html.RadioButtonFor(s => s.IsEmailVerified, "false") No </label>
            </div>
        </div>

        <div id="createClientUserBtn">
            <button class="create-btn">Create</button>&nbsp;&nbsp;&nbsp;
            <button type="reset" class="reset-btn">Reset</button>
        </div>
    </div>
}