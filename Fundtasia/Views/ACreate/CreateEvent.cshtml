@model Event
@{
    ViewBag.Title = "Create Event";

    string youtubeId = Request.Params["YouTubeLink"];
    var ao = new AjaxOptions
    {
        UpdateTargetId = "target",
        LoadingElementId = "loader"
    };
    //LoadingElementId = "loader",
    //OnFailure = "failure", when the result display got problem you may use this to display failure
    //If your search result is successfuly displayed you may use OnSuccess to trigger the script
}


<div class="row">
    <!-- Column -->
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @using (Ajax.BeginForm(ao))
                {
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", autofocus = "" } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.CoverImage, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "file" } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "number", min = 1 } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.YouTubeLink, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.YouTubeLink, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "url", min = 1 } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Article, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.TextAreaFor(model => model.Article, new { @class = "ckeditor", required = "" })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        <div class="col-sm-12">
                            <button class="btn btn-success rounded-pill text-white">Submit</button>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
    <!-- Column -->
</div>


@section foot{
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/ckeditor/adapters/jquery.js"></script>
}