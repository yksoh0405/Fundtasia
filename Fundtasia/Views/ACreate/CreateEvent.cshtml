@model Event
@{
    ViewBag.Title = "Create Event";

    string youtubeId = Request.Params["YouTubeLink"];
    var ao = new AjaxOptions
    {
        UpdateTargetId = "target",
        LoadingElementId = "loader"
    };
    //LoadingElementId = "loader",
    //OnFailure = "failure", when the result display got problem you may use this to display failure
    //If your search result is successfuly displayed you may use OnSuccess to trigger the script
}


<div class="row">
    <!-- Column -->
    <div class="col-lg-12 col-md-12" id="target">
        <div class="white-box">
            @*
                <div class="user-bg bg-info bg-gradient" id="dropArea">
                    <p class="text-center mt-5 fs-5 fw-bold">
                        Drag and drop your cover image here
                    </p>
                </div>
            *@
            <div class="user-bg bg-info bg-gradient">
                <iframe width="100%" height="100%" src="https://www.youtube.com/embed/ @youtubeId" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                @*
            <p class="text-center mt-5 fs-5 fw-bold">
                Drag and drop your cover image here
            </p>
        </div>
        <div class="user-btm-box mt-5 d-md-flex">
            <input class="form-control" name="name" value="" id="dropText" disabled />
                *@
            </div>
            
        </div>
    </div>
    <!-- Column -->
    <!-- Column -->
    <div class="col-lg-8 col-xlg-9 col-md-12">
        <div class="card">
            <div class="card-body">
                @using (Ajax.BeginForm(ao))
                {
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", autofocus = "" } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.CoverImage, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "file" } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "number", min = 1 } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.YouTubeLink, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.YouTubeLink, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "url", min = 1 } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.ImageArray, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.EditorFor(model => model.ImageArray, new { htmlAttributes = new { @class = "form-control p-0 border-0", required = "", type = "file", multiple = "" } })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        @Html.LabelFor(model => model.Article, htmlAttributes: new { @class = "col-md-12 p-0" })
                        <div class="col-md-12 border-bottom p-0">
                            @Html.TextAreaFor(model => model.Article, new { @class = "ckeditor", required = "" })
                        </div>
                    </div>
                    <div class="form-group mb-4">
                        <div class="col-sm-12">
                            <button class="btn btn-success">Update Profile</button>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
    <!-- Column -->
</div>


@section foot{
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/ckeditor/adapters/jquery.js"></script>
}